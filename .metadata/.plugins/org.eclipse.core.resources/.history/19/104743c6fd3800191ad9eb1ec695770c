package com.hacker.mail;

import org.apache.poi.ss.usermodel.WorkbookFactory;
import org.springframework.batch.core.configuration.annotation.EnableBatchProcessing;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.DataFormatter;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import java.io.File;
import java.io.IOException;
import java.lang.reflect.Array;
import java.util.ArrayList;

import org.apache.poi.EncryptedDocumentException;

@Configuration
@EnableBatchProcessing
public class EmailingController {
	@Autowired
	FeedbackController feed;
	 
	  @Autowired
	    private JavaMailSender emailSender;
	@Bean  
	public  void sendEmail() throws EncryptedDocumentException, IOException{
		 System.out.println("Spring Mail - Sending Simple Email with JavaMailSender Example");

	       
	        String SAMPLE_XLSX_FILE_PATH = "C:\\Users\\Admin\\Documents\\workspace-sts-3.9.7.RELEASE\\Mailer\\src\\main\\resources\\Volunteer_Enrollment Details_Unregistered.xlsx";
			 System.out.println("Spring Mail - Sending Simple Email with JavaMailSender Example");
			  Workbook workbook = WorkbookFactory.create(new File(SAMPLE_XLSX_FILE_PATH));

		        // Retrieving the number of sheets in the Workbook
		        System.out.println("Workbook has " + workbook.getNumberOfSheets() + " Sheets : ");

		     
		        // Getting the Sheet at index zero
		        Sheet sheet = workbook.getSheetAt(0);

		        // Create a DataFormatter to format and get each cell's value as String
		        DataFormatter dataFormatter = new DataFormatter();

		     
		        // 2. Or you can use a for-each loop to iterate over the rows and columns
		        System.out.println("\n\nIterating over Rows and Columns using for-each loop\n");
		        for (Row row: sheet) { 
		    	     if(0!= row.getRowNum())
		    	     {
		        	  Email mail = new Email();
		        	row.getCell(0);
		        	Feedback feedback = new Feedback();
		                String cellValue = dataFormatter.formatCellValue(row.getCell(5));
		                System.out.print(cellValue + "\t");
		                mail.setFrom("priya.raju1003@gmail.com");
		    	        mail.setTo("priya.raju3@cognizant.com");
		    	        mail.setSubject("Feedback for Outreach Event");
		    	        mail.setContent("As per our records we see that you had registered for the event " +row.getCell(1) +". But later unregistered. \n Please click on the link to provide your a suitable reason for your absence. \n http://localhost:3000/feedback2?empID="+dataFormatter.formatCellValue(row.getCell(5))+"&eventID="+dataFormatter.formatCellValue(row.getCell(0)));
		    	       
		    	        SimpleMailMessage message = new SimpleMailMessage();
		    	        message.setSubject(mail.getSubject());
		    	        message.setText(mail.getContent());
		    	        message.setTo(mail.getTo());
		    	        message.setFrom(mail.getFrom());
		    	        emailSender.send(message);
		    	        feedback.setEmpID(Integer.parseInt(dataFormatter.formatCellValue(row.getCell(5))));
		       	        feedback.setEventid(dataFormatter.formatCellValue(row.getCell(0)));
		       	    
		    	        feed.createFeedBack(feedback);
		    	     
		    	        	
		        }}
		      
		       
    	       

		       
		        // Closing the workbook
		        workbook.close();
	       

	      
		
	}
	
}
